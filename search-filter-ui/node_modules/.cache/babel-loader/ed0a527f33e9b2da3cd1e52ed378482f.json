{"ast":null,"code":"var _jsxFileName = \"/Users/defne/Desktop/search-filter-ui/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Datatable from './datatable/index.js';\nimport './app/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('es6-promise').polyfill();\n\nrequire('isomorphic-fetch');\n\nexport default function App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [q, setQ] = useState('');\n  const [searchColumns, setSearchColumns] = useState(['name', 'birth_year', 'vehicles']);\n  useEffect(() => {\n    fetch('https://swapi.dev/api/people').then(response => response.json()).then(json => setData(json.results));\n  }, []);\n\n  function search(rows) {\n    return rows.filter(row => searchColumns.some(column => row[column].toString().toLowerCase().indexOf(q.toLowerCase()) > -1));\n  }\n\n  const columns = data[0] && Object.keys(data[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: q,\n        onChange: e => setQ(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), columns && columns.map(column => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: searchColumns.includes(column),\n          onChange: e => {\n            const checked = searchColumns.includes(column);\n            setSearchColumns(prev => checked ? prev.filter(sc => sc !== column) : [...prev, column]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), column]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Datatable, {\n        data: search(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sFCOYKUZLY9Sp42Eca8dL9NbpjU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/defne/Desktop/search-filter-ui/src/App.js"],"names":["React","useState","useEffect","Datatable","require","polyfill","App","data","setData","q","setQ","searchColumns","setSearchColumns","fetch","then","response","json","results","search","rows","filter","row","some","column","toString","toLowerCase","indexOf","columns","Object","keys","e","target","value","map","includes","checked","prev","sc"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAO,kBAAP;;;AAEAC,OAAO,CAAC,aAAD,CAAP,CAAuBC,QAAvB;;AACAD,OAAO,CAAC,kBAAD,CAAP;;AAEA,eAAe,SAASE,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,CAAD,EAAIC,IAAJ,IAAYT,QAAQ,CAAC,EAAD,CAA1B;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,CACjD,MADiD,EAEjD,YAFiD,EAGjD,UAHiD,CAAD,CAAlD;AAMAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUR,OAAO,CAACQ,IAAI,CAACC,OAAN,CAFzB;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,WAAOA,IAAI,CAACC,MAAL,CAAaC,GAAD,IACjBV,aAAa,CAACW,IAAd,CACGC,MAAD,IACEF,GAAG,CAACE,MAAD,CAAH,CACGC,QADH,GAEGC,WAFH,GAGGC,OAHH,CAGWjB,CAAC,CAACgB,WAAF,EAHX,IAG8B,CAAC,CALnC,CADK,CAAP;AASD;;AAED,QAAME,OAAO,GAAGpB,IAAI,CAAC,CAAD,CAAJ,IAAWqB,MAAM,CAACC,IAAP,CAAYtB,IAAI,CAAC,CAAD,CAAhB,CAA3B;AACA,sBACE;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEE,CAFT;AAGE,QAAA,QAAQ,EAAGqB,CAAD,IAAOpB,IAAI,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV;AAHvB;AAAA;AAAA;AAAA;AAAA,cADF,EAMGL,OAAO,IACNA,OAAO,CAACM,GAAR,CAAaV,MAAD,iBACV;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EAAEZ,aAAa,CAACuB,QAAd,CAAuBX,MAAvB,CAFX;AAGE,UAAA,QAAQ,EAAGO,CAAD,IAAO;AACf,kBAAMK,OAAO,GAAGxB,aAAa,CAACuB,QAAd,CAAuBX,MAAvB,CAAhB;AACAX,YAAAA,gBAAgB,CAAEwB,IAAD,IACfD,OAAO,GACHC,IAAI,CAAChB,MAAL,CAAaiB,EAAD,IAAQA,EAAE,KAAKd,MAA3B,CADG,GAEH,CAAC,GAAGa,IAAJ,EAAUb,MAAV,CAHU,CAAhB;AAKD;AAVH;AAAA;AAAA;AAAA;AAAA,gBADF,EAaGA,MAbH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEL,MAAM,CAACX,IAAD;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GA5DuBD,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Datatable from './datatable/index.js';\nimport './app/styles.css';\n\nrequire('es6-promise').polyfill();\nrequire('isomorphic-fetch');\n\nexport default function App() {\n  const [data, setData] = useState([]);\n  const [q, setQ] = useState('');\n  const [searchColumns, setSearchColumns] = useState([\n    'name',\n    'birth_year',\n    'vehicles',\n  ]);\n\n  useEffect(() => {\n    fetch('https://swapi.dev/api/people')\n      .then((response) => response.json())\n      .then((json) => setData(json.results));\n  }, []);\n\n  function search(rows) {\n    return rows.filter((row) =>\n      searchColumns.some(\n        (column) =>\n          row[column]\n            .toString()\n            .toLowerCase()\n            .indexOf(q.toLowerCase()) > -1,\n      ),\n    );\n  }\n\n  const columns = data[0] && Object.keys(data[0]);\n  return (\n    <div>\n      <div>\n        <input\n          type='text'\n          value={q}\n          onChange={(e) => setQ(e.target.value)}\n        />\n        {columns &&\n          columns.map((column) => (\n            <label>\n              <input\n                type='checkbox'\n                checked={searchColumns.includes(column)}\n                onChange={(e) => {\n                  const checked = searchColumns.includes(column);\n                  setSearchColumns((prev) =>\n                    checked\n                      ? prev.filter((sc) => sc !== column)\n                      : [...prev, column],\n                  );\n                }}\n              />\n              {column}\n            </label>\n          ))}\n      </div>\n      <div>\n        <Datatable data={search(data)} />\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}